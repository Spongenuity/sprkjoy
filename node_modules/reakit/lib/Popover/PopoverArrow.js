'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

require('reakit-utils/warning');
var React = require('react');
require('reakit-utils/useId');
var createComponent = require('reakit-system/createComponent');
var createHook = require('reakit-system/createHook');
var Box = require('../Box/Box.js');
var __chunk_1 = require('../chunk-002fc018.js');
var mergeRefs = require('reakit-utils/mergeRefs');
require('reakit-utils/useSealedState');
require('../Hidden/HiddenState.js');
require('../Dialog/DialogState.js');
require('popper.js');
var PopoverState = require('./PopoverState.js');

var usePopoverArrow = createHook.createHook({
  name: "PopoverArrow",
  compose: Box.useBox,
  useState: PopoverState.usePopoverState,
  useProps: function useProps(options, _ref) {
    var _objectSpread2;

    var htmlRef = _ref.ref,
        htmlStyle = _ref.style,
        htmlProps = __chunk_1._objectWithoutPropertiesLoose(_ref, ["ref", "style"]);

    var _options$placement$sp = options.placement.split("-"),
        placement = _options$placement$sp[0];

    var transformMap = {
      top: "rotateZ(180deg)",
      right: "rotateZ(-90deg)",
      bottom: "rotateZ(360deg)",
      left: "rotateZ(90deg)"
    };
    var arrowStyles = options.unstable_arrowStyles;
    return __chunk_1._objectSpread({
      ref: mergeRefs.mergeRefs(options.unstable_arrowRef, htmlRef),
      style: __chunk_1._objectSpread({}, arrowStyles, (_objectSpread2 = {
        top: arrowStyles ? arrowStyles.top || undefined : undefined,
        position: "absolute",
        fontSize: "30px",
        width: "1em",
        height: "1em",
        pointerEvents: "none",
        transform: transformMap[placement]
      }, _objectSpread2[placement] = "100%", _objectSpread2), htmlStyle),
      children: React.createElement("svg", {
        viewBox: "0 0 30 30"
      }, React.createElement("path", {
        className: "stroke",
        d: "M23.7,27.1L17,19.9C16.5,19.3,15.8,19,15,19s-1.6,0.3-2.1,0.9l-6.6,7.2C5.3,28.1,3.4,29,2,29h26 C26.7,29,24.6,28.1,23.7,27.1z"
      }), React.createElement("path", {
        className: "fill",
        d: "M23,27.8c1.1,1.2,3.4,2.2,5,2.2h2H0h2c1.7,0,3.9-1,5-2.2l6.6-7.2c0.7-0.8,2-0.8,2.7,0L23,27.8L23,27.8z"
      }))
    }, htmlProps);
  }
});
var PopoverArrow = createComponent.createComponent({
  as: "div",
  useHook: usePopoverArrow
});

exports.PopoverArrow = PopoverArrow;
exports.usePopoverArrow = usePopoverArrow;
